#! /usr/bin/env bash

## Script which creates an overview of system information related to
## the specified ECE/EAE/Search instance, example invocation:
##
## $ system-info -i web1 | xmllint --format - > /var/www/web1.html
##
## TODO:
## Add this to /etc/cronttab
# echo '* *     * * *   root    system-info -f html > /var/www/index.html' >> /etc/crontab

ece_user=""

## 1 : html
## 2 : org
format=html

function init() {
  # first, try to be nice
  ece_scripts_dir=$(dirname $0)/../share/escenic/ece-scripts
  
  # then check the standard location
  if [ ! -d $ece_scripts_dir  ]; then
    ece_scripts_dir=/usr/share/escenic/ece-scripts
  fi

  source $ece_scripts_dir/common-ece.sh
}

## Runs extra system-info modules
function run_system_info_modules() {
  if [ -d $ece_scripts_dir ]; then
    # load system-info modules
    if [ ! -d $ece_scripts_dir/system-info.d ]; then
      return
    fi
    
    for el in $(\ls $ece_scripts_dir/system-info.d/*.sh 2>/dev/null); do
      source $el
    done
  fi
}

function create_header() {
  local title="Overview of $HOSTNAME"
  
  if [ $format == "org" ]; then
    echo "* $title"
    echo "Generated @ $(date)"
    return
  fi

  local header="
<html xmlns=\"http://www.w3.org/1999/xhtml\">
  <head>
    <title>$title @ $(date)</title>
    <style type=\"text/css\">
$(cat $ece_scripts_dir/vizrt.css)
    </style>
  </head>
  <body>
$(cat $ece_scripts_dir/html-vizrt-logo-svg.html)
    <h1>$title</h1>
    <p>Generated @ $(date)</p>
"
  echo "$header"
}

function create_footer() {
  if [ $format != "html" ]; then
    return
  fi
  
  local footer="
  </body>
</html>
"
  echo "$footer"
}

function wrap_in_anchor_if_applicable() {
  if [ $format == "org" ]; then
    echo "$@"
    return
  fi

  local result=""
  for el in "$@"; do
    if [[ $el == "/"* || $el == "http://"* || $el == "mysql://"* ]]; then
      result="$result <a href=\"${el}\">$el</a>"
    else
      result="$result $el"
    fi
    
  done
  echo "$result"
}

function print_un_ordered_list_start() {
  if [ $format == "org" ]; then
    echo ""
  elif [ $format == "html" ]; then
    echo "<ul>"
  fi
}

function print_un_ordered_list_end() {
  if [ $format == "org" ]; then
    echo ""
  elif [ $format == "html" ]; then
    echo "</ul>"
  fi
}

function print_list_item() {
  if [ $format == "org" ]; then
    echo "- $@"
  elif [ $format == "html" ]; then
    echo "<li>" \
      "$@" \
      "</li>"
  fi
}
 
function print_pre_text() {
  if [ $format == "org" ]; then
    cat <<EOF
#+BEGIN_SRC sh
$@  
#+END_SRC
EOF
  elif [ $format == "html" ]; then
    cat <<EOF
<pre>
$@
</pre>
EOF
  fi
}

function print_h3_header() {
  if [ $format == "org" ]; then
    echo ""
    echo "*** $@"
  elif [ $format == "html" ]; then
    echo "<h3>$@</h3>"
  fi
}

function print_h4_header() {
  if [ $format == "org" ]; then
    echo ""
    echo "**** $@"
  elif [ $format == "html" ]; then
    echo "<h4>$@</h4>"
  fi
}

function print_h2_header() {
  if [ $format == "org" ]; then
    echo ""
    echo "** $@"
  elif [ $format == "html" ]; then
    echo "<h2>$@</h2>"
  fi
}

function print_h1_header() {
  if [ $format == "org" ]; then
    echo "* $@"
  elif [ $format == "html" ]; then
    echo "<h1>$@</h1>"
  fi
}

function print_p_text() {
  if [ $format == "org" ]; then
    echo "$@"
  elif [ $format == "html" ]; then
    cat <<EOF
<p>
  $@
</p>
EOF
  fi
}

function get_user_options() {
  while getopts ":i:f:u:" opt; do
    case $opt in
      i)
        instance=${OPTARG}
        ;;
      u)
        ece_user=${OPTARG}
        ;;
      f)
        format=${OPTARG}
        ;;
      \?)
        echo "Invalid option: -$OPTARG" >&2
        exit 1
        ;;
      :)
        echo "Option -$OPTARG requires an argument." >&2
        exit 1
        ;;
    esac
  done
  
}

init
get_user_options $@
create_header
run_system_info_modules
create_footer


