#+TITLE: Welcome to the ece-install Guide
#+AUTHOR: Torstein Krause Johansen
#+OPTIONS: toc:2 

* Supported Operating Systems
For the best experience, run this script on Debian Squeeze (or newer),
the latest Ubuntu LTS or most other Debian based operating systems,
but it should work without any problems on any Unix like system that
has BASH version 4.2 or newer.

** Debian Based Operating Systems
If running on a Debian based operating system, ece-install will take
care of installing all required third party software, such as database
& caching server.

** RedHat Based Operating Systems
ece-install constantly gets better support for automatic installation
on RedHat based operating systems. However, since the public RedHat
repositories are significantly smaller than the Debian ones, there
will often be the case that you'll have to do some manually
installation of 3rd party dependencies prior to running
ece-install. Don't despair though, ece-install will tell you what you
need to do. 

** Other GNU/Linux and Unix systems 
If you're installing on another Linux or Unix system, you must first
make sure that these 3rd party components are installed. ece-install
will tell you which ones it cannot find and tell you to install these,
so you can simply run it to find out which ones you need.

You may also look inside the ece-install script for all calls to the
'assert_pre_prequesite' method and you'll get a list of the binaries
ece-install assumes are present.

** Common Requirements for All Operating Systems
*** Internet Connection
The installer needs an internet connection, preferably a fast one as
several hundreds of megabytes are downloaded.

*** Firewall Rules
ece-install must be able to make outgoing connections from the machine
on which it is running to the following ports:

- 80 (standard HTTP)
- 443 (HTTPS)

** Tested Operating Systems
| Operating system     | Status                                              | Date updated     |
|----------------------+-----------------------------------------------------+------------------|
| CentOS 6.2           | HA, APR & monitoring are not automatic              | 2012-03-07 13:42 |
| Debian 6.0 (squeeze) | Everything is 100% automatic                        | 2012-02-27 13:18 |
| Ubuntu 11.10         | Everything except Tomcat/APR wrappers are automatic | 2012-02-27 13:19 |
| Ubuntu LTS 10.04     | Everything except Tomcat/APR wrappers are automatic | 2012-02-27 13:19 |
| Ubuntu LTS 12.04     | Everything except Tomcat/APR wrappers are automatic | 2012-07-27 03:27 |

* A Note on Running ece-install On Non-GNU/Linux Systems
Please note, it's assumed that the OS uses GNU's tools, i.e. find, cp
& tar. If you're running a system which has a different set of core
tools, such as any of the BSDs (including Mac OS X) or Solaris, make
sure that GNU's tools take precedence in the command PATH offered to
ece-install.

* Downloading the ece-install Script
The easiest way of getting ece-install is to use git. Type this in
your shell:

#+BEGIN_SRC text
$ git clone https://github.com/skybert/ece-scripts.git
#+END_SRC

The reason why we want you to use git to download ece-install, is that
you later easily can get the latest changes (for instance after we fix
one of your reported issues), by doing "git pull" inside the
ece-scripts directory.

If you have problems installing git, you can also download a ZIP
archive here: https://github.com/skybert/ece-scripts/zipball/master

* Running the ece-install Script
After getting the latest version of ece-scripts, you run it with:
#+BEGIN_SRC text
# bash ece-scripts/usr/sbin/ece-install  
#+END_SRC

** Requires Super User Privileges
You must run the script as the root user.  If you start the script as
a regular user, it will complain:
#+BEGIN_SRC text
[ece-install] You must be root when running ece-install
#+END_SRC
To become root on Ubuntu based systems and Mac OS X, do:
#+BEGIN_SRC text
$ sudo su
#+END_SRC
Please note that just doing "sudo ece-install" may not work.

On all other Unix like system, do:
#+BEGIN_SRC text
$ su -
#+END_SRC

** Technet & WF credentials
You will need access to http://technet.escenic.com and put these
credentials in the root user's $HOME/ece-install.conf, normally this
means /root/ece-install.conf, the script will also tell you this if
you forget to provide such a configuration file:
#+BEGIN_SRC text
[ece-install] /root/ece-install.conf doesn't exist, I cannot live without it :-(
#+END_SRC

As for the technet credentials, the script will also tell you if it
cannot find what it's looking for:
#+BEGIN_SRC text
[ece-install] Be sure to set technet_user and technet_password
[ece-install] in /root/ece-install.conf
#+END_SRC

The minimum ece-install.conf file is thus:
#+BEGIN_SRC conf
technet_user=<user>
technet_password=<password>
#+END_SRC

If you're installing WF as well, you'll need additional credentials
for this, see the Widget Framwork section below, and if you want to
runn a fully automatic install without any user interaction, you'll
need to specify some FAI specific parameters, see the FAI section
below. 

** Basic invocation & how to debug errors
With the configuration file in place, you're now ready to run it:
#+BEGIN_SRC text
# bash ece-install [-v|--verbose|<-f|--file> <conf-file>]
#+END_SRC

It will output everything from internal and external commands to its
log file located at /var/log/ece-install.log.

ece-install will try to "fail fast", exiting as soon as it detects an
error during its execution:
#+BEGIN_SRC text
[ece-install-1] The command [cd /does/not/exist] FAILED, exiting :-(
[ece-install-1] See /var/log/ece-install.log for further details.
#+END_SRC

As a last resort, if something goes astray with the script, and the
log file cannot give you enough clues, the ultimate way of debugging
this is to run the BASH interpreter with the -x flag:
#+BEGIN_SRC text
# bash -x ece-install
#+END_SRC

Here you can see everything that BASH does when running the script,
how the wildcard variables expand and so on. Normally, having a tail
on /var/log/ece-install.log should be sufficient, though.

** Preventing accidental execution of ece-install 

ece-install has support for a lock file. This is useful for systems
were you want to ensure that no one incidentally triggers ece-install
without wanting to. The location of this lock file is:

#+BEGIN_SRC text
/var/lock/ece-install.lock
#+END_SRC
    
If this lock file is in place, ece-install will fail fast:

#+BEGIN_SRC text
The lock file is present: /var/lock/ece-install.lock and ece-install
will therefore refuse to run.
#+END_SRC

* Available Server Profiles
When starting the script, it will ask you which server profile you
want to install:
#+BEGIN_SRC text
Hi, which server profile do you wish to install?

   1 - All in one, full stack on one host, suitable for dev & test environments
   2 - Editorial (publication) server
   3 - Presentation server (ECE + memcached).
   4 - Database server
   5 - Cache server (cache and web server)
   6 - RMI hub
   7 - Search server (Solr + indexer-webapp)
   8 - Install Widget Framework.
   9 - Create a new publication based on WF if available, ECE/clean-demo if not
   10 - A monitoring server (web server + Munin gatherer)
   11 - Restore from backup (DB, data files, binaries, conf & publications)

Select 1-11 and press ENTER
Your choice [1]> 
#+END_SRC
** Common for All Server Profiles
The script will install a Munin node on the host. It will also
install the Escenic specific Munin plugins on hosts where there are
any Escenic server components.

** Common for Editorial, Presentation and Search Instances
*** Sun Java 6
*** Apache Tomcat application server
- Compression of textual content (previously, this was typically set
  up with Apache and its mod_deflate module).
- pooling set up tweaked for high read/write performance.
- proper logging configuration directing solr messages to its own log.
- routing information in the cookies
- application server access log
*** Basic Escenic Nursery configuration
The basic Nursery configuration is taken care of for you, including RMI,
  database, search and application server/URIs. 
*** APR, native library for optimal Tomcat I/O performance
*** Escenic Assembly environment
The reason why ece-install sets this up on each host, is to make the
installation process as smooth as possible. The assembly environment
may be removed after the installation if you want to.

*** Database driver

*** Compression of content 
This was was previously accomplished by having a web server in fron t
of the application server (or cache server if you used ESI). A typical
system architecture would contain Apache with mod_deflate. However,
this is no longer necessary as Varnish can handles ESI parsing of
compressed content (and many other things that we before needed Apache
for). Thus, we'll let the application server do the compression for us
now.

** Profile :: Full Stack on One Host
This profile is suitable for developers and admins wanting to set up a
test environment. It will install the full stack including caching
server, application server, ECE, assembly host, database, Widget
Framework, as well as creating a publication for you.

For further details on each of the different server components, see
the different profile descriptions bellow.


** Profile :: Editorial Server (Publication Server)
Will set up a typical editorial server (often referred to as the
publication server in Escenic literature).

** Profile :: Presentation Server
This will set up a typical presentation server:
- Memcached, distributed memory cache
- Deployment setup to only deploy escenic-admin and the
  publication(s).

** Profile :: Database Server
If ece-install is run on a support version of Debian or Ubuntu, this
will install the excellent Percona distribution of MySQL with their
set of high performance patches.

If not, MySQL or Percona must be installed in advance.

Given that the mysqld is install, this profile will download all the
Escenic components and install the ECE database schema based from the
SQL files contained inside the distribution bundles. 

The script will fail by itself if the DB already exists:
#+BEGIN_SRC text
[ece-install] Setting up the ECE database schema ...
ERROR 1007 (HY000) at line 1: Can't create database 'ece5db'; database exists
ERROR 1050 (42S01) at line 2: Table 'DBChangeLog' already exists
[ece-install] running tables FAILED, exiting :-(
#+END_SRC
If you for some reason wish to make ece-install drop the DB fro you
before creating a new one, you can set
#+BEGIN_SRC conf
fai_db_drop_old_db_first=1
#+END_SRC

*** Master & slave setup
It's easy to set up master and slave DBs, here's how you'd configure
ece-install to install these:

On the master, create an ece-install.conf with:
#+BEGIN_SRC conf
fai_enabled=1
fai_db_install=1
fai_db_master=1
fai_db_replication=1
#+END_SRC

The script will itself output some replication log settings you need
for the slave:
#+BEGIN_SRC text
[ece-install-35] - DB is now set up on localhost:3306
[ece-install-35] - ece-install.conf for slave: fai_db_master_log_file=mysql-bin.000013
[ece-install-35] - ece-install.conf for slave: fai_db_master_log_position=106
#+END_SRC

Once this is done, create and use an ece-install.conf on the slave
with this configuration:
#+BEGIN_SRC conf
fai_enabled=1
fai_db_install=1
fai_db_replication=1
fai_db_master=0
fai_db_master_host=my-db-master
fai_db_master_log_file=mysql-bin.000013
fai_db_master_log_position=106
#+END_SRC

The script will set up and use the replication user & credentials with
default values, if you wish to override these, have a look in the FAI
parameter overview.

** Profile :: Cache Server
If ece-install is run on a support version of Debian or Ubuntu, it
will install the latest Varnish 3.0 caching server from the Varnish
APT repository.

If ece-install is run on a different platform, the admin must install
Varnish 3.x prior to running ece-install.

The script will configure Varnish for a typical Escenic site:
- it will set up the cache server on port 80
- will set up an access control lists of IPs which may access the
  privileged web applications such as /escenic-admin, /escenic and
  /webservice.

  ece-install will also add the host from which you connect, making
  sure that if you've SSH-ed into the server to conduct the install,
  you'll automatically be included in the "staff" ACL and can access
  all the web applications without editing these ACLs (or disabling
  security as many does).

- will set up sticky sessions/session binding
- will set up a backend cluster and allow the user to enter the
  different backend servers that will serve the web site.
- will set up configuration to strip away cookies from static
  resources, such as CSS, JS and pictures.
- will install the nginx web server for serving static content and
  will configure Varnish accordingly. This will be very useful for
  Adactus servers wanting to pull content from your ECEs.

TBD:
- If run on a Linux platform, the script will tweak the kernel
  parameters for optimal TCP handling for a web facing server.
- let the /munin run through on port 80, requiring the connecting IPs
  to be in the staff network ACL, defined in the Varnish
  configuration. 

** Profile :: Install Widget Framework
You'll need a user name and password for accessing the
repo.escenic.com Maven repository. You should get these credentials
when you bought Widget Framework. If you for some reason do not have
these, please contact support@escenic.com. 

If you don't have these ready in your ece-install.conf, ece-install will
complain:
#+BEGIN_SRC text
[ece-install] Be sure to set wf_user and wf_password in /root/ece-install.conf
[ece-install] If you don't have these, please contact support@escenic.com
#+END_SRC
** Profile :: Create Publication
This profile will create a publication for you, only asking you the
name of the publication and which ECE instance to use for its
creation.

This installation profile will base the publication on the Widget
Framework if its present on the system, if not, ECE's clean demo WAR
is used as a basis.  
** Profile :: Monitoring Server
This will install a Munin gatherer and web server. The latter for
accessing the reports generated by the former.

TBD: This profile will also install the Nagios interface for
monitoring the different nodes. 

** Profile :: Restoring from backup
~ece-install~ can restore from a backup made by the ~ece~ script:
#+BEGIN_SRC text
$ ece -i <instance> backup
#+END_SRC

As stated in the guide for the ece script, this backup may contain
(depending on what's available on the host where it's run):
- database dump of the instance
- data files (pictures, video files and so on). This is often referred
  to as the "multimedia archive" in Escenic literature.
- ECE, cache and web server configuration
- Escenic software

** Running interactively
*** Start ece-install and choose the Option, "Restore from backup"
#+BEGIN_SRC text
# ece-install
#+END_SRC

*** Select Which Backup to Restore

#+BEGIN_SRC text
[ece-install-5] From which dataset do you wish to backup?
    1 - engine-dev1-backup-2011-10-10.tar.gz
    2 - engine-dev1-backup-2011-10-11.tar.gz
[ece-install-5] Enter the number next to the tarball, from 1 to 2
Your choice [1]>
#+END_SRC

The ece script mentioned above will create backups in
~/var/backups/escenic~ and the ece-install script will hence expect to
find them here.

*** Choose What to Restore
#+BEGIN_SRC text
[ece-install-12] Which part of the system do you wish to restore?
    1 - The database
    2 - The Solr and ECE data files (multimedia archive)
    3 - The ECE configuration files
    4 - The Escenic and Tomcat software binaries + publication templates
Your choice [1]> 2
#+END_SRC

*** Sit Back and Watch ece-install Restore the Data for You
#+BEGIN_SRC text
[ece-install-13] Restoring the Solr & ECE data files on ubiquitous ...
[ece-install-21] - The installation is now complete! It took 0d 0h 0m 20s
[ece-install] Successfully restored Solr & ECE data files
[ece-install] from backup:  engine-dev1-backup-2011-10-12.tar.gz
[ece-install] Check /var/lib/escenic to verify they're all there
#+END_SRC

** Running in FAI mode
If you're running in FAI mode, you can choose between these settings
to decide what to restore and where to find the backup file to
restore from:

|---------------------------------+---------+----------------------------------------------------|
| Parameter                       | Default | Description                                        |
|---------------------------------+---------+----------------------------------------------------|
| ~fai_restore_from_backup~       |       0 | Enable restoring from backup                       |
| ~fai_restore_all~               |       0 | Restore everything found in the backup file        |
| ~fai_restore_db~                |       0 | Install the DB server & restore its contents       |
| ~fai_restore_data_files~        |       0 | Restore the Solr & ECE data files                  |
| ~fai_restore_configuration~     |       0 | Restore the Solr & ECE configuration files         |
| ~fai_restore_software_binaries~ |       0 | Restore the Escenic and Apache Tomcat software     |
| ~fai_restore_from_file~         |      "" | The .tar.gz produced by ~ece -i <instance> backup~ |
|---------------------------------+---------+----------------------------------------------------|

For example, to restore everything possible from a given tarball, you
need this in your ece-install.conf:
#+BEGIN_SRC conf
fai_enabled=1

fai_restore_from_backup=1
fai_restore_all=1
fai_restore_from_file=/var/backups/escenic/engine-dev1-backup-2011-10-10.tar.gz
#+END_SRC

ece-install can also remove files  prior to restoring from the
backup:

|------------------------------+---------+-----------------------------------|
| Parameter                    | Default | Description                       |
|------------------------------+---------+-----------------------------------|
| ~fai_restore_pre_wipe_all~   |       0 | Remove all data/state & log files |
| ~fai_restore_pre_wipe_cache~ |       0 | Remove the cache files            |
| ~fai_restore_pre_wipe_crash~ |       0 | Remove the crash files            |
| ~fai_restore_pre_wipe_logs~  |       0 | Remove all log files              |
| ~fai_restore_pre_wipe_solr~  |       0 | Remove the solr data/state files  |
|------------------------------+---------+-----------------------------------|

** Profile :: Analysis Server
This profile will install the Escenic Analysis Engine and configure it
for production use with sane defaults. Be sure to use a different DB
than you use for ECE.

** Profile :: NFS server
Will install an NFS server.

** Profile :: NFS client
Will install an NFS client, create all the mountpoints and mount these
on the host.

Configuration example for setting up an NFS client mounting the
multimedia archive on the NFS server:
#+BEGIN_SRC conf
fai_enabled=1
fai_nfs_client_install=1
fai_nfs_server_address=192.168.1.200
fai_nfs_export_list="/var/exports/multimedia"  
#+END_SRC

** Profile :: VIP provider
[[file:images/nfs-vip.png]]

This profile will make the host capable of serving a certain virtual
IP (VIP) for one or more services. This is a useful thing for all
[[http://en.wikipedia.org/wiki/Single_point_of_failure][SPOFs]] in your architecture, such as the file server or database.

You will typically install another profile at the same time as the VIP
provider. For instance, you will install both an NFS server and a VIP
provider for that NFS server (and perhaps other services too running
on the same host).

The following ece-install.conf configuration will install an NFS
server and make it a VIP provider exposing its NFS service. The two
VIP providers have have the IP addresses 192.168.1.111 and
192.168.1.112 and both provide the VIP 192.168.1.200

#+BEGIN_SRC conf
# install the NFS server
fai_enabled=1
fai_nfs_server_install=1
fai_nfs_export_list="/var/exports/multimedia"
fai_nfs_allowed_client_network="192.168.1.0/255.255.255.0"

# install the VIP provider, primary node
fai_vip_install=1
fai_vip_service_list="nfs-kernel-server"
fai_vip_primary_node_name=ubiquitous
fai_vip_primary_node_ip=192.168.1.112
fai_vip_primary_node_auth_key=d41d8cd98f00b204e9800998ecf8427e
fai_vip_secondary_node_name=ubiquitous-lts
fai_vip_secondary_node_ip=192.168.1.111
fai_vip_address=192.168.1.200
fai_vip_sibling_ip=$fai_vip_secondary_node_ip
#+END_SRC

The secondary node, also an NFS VIP provider can have the exact same
configuration except for having a different sibling:

#+BEGIN_SRC conf
fai_vip_sibling_ip=$fai_vip_primary_node_ip
#+END_SRC

Note that the fai_vip_primary_node_auth_key is optional. If not set,
ece-install will generate it for you. However, you will then have to
add this to ece-install.conf when installing the secondary
node. Generate this key, do:

#+BEGIN_SRC sh
$ dd if=/dev/urandom bs=512 count=1 | \
    openssl md5 | \
    cut -d' ' -f2   
#+END_SRC

** Data security
You should take heed when running restore, so that you're not
restoring a system which you didn't want to change (yes, this mishap
does happen).

The ece-install script will help you a bit on the way, but the final
responsibility always lies with you as the user. 

If you're trying to restore the DB and the ECE schema already exists,
the restore will fail:
#+BEGIN_SRC text
[ece-install-8] Restoring the database contents on ubiquitous ...
[ece-install-24] Selecting the most recent database dump ece5db-2011-10-10.sql.gz
ERROR 1007 (HY000) at line 1: Can't create database 'ece5db'; database exists
ERROR 1050 (42S01) at line 25: Table '`ece5db`.`AccessControlList`' already exists
[ece-install-24] The command [restoring from var/backups/escenic/ece5db-2011-10-10.sql.gz] FAILED, exiting :-(
[ece-install-24] See /var/log/ece-install.log for further details.
#+END_SRC
* Full Automatic Install (FAI)
The ece-install script has support for doing a full automatic install
(FAI). You can only install one profile at a time. The profiles are
the parameters with "install" in their name, such as:
#+BEGIN_SRC conf
fai_editor_install
#+END_SRC

When running in FAI mode, you probably want to redirect standard
output to a log file for easy reading later on:
#+BEGIN_SRC text
# bash ece-install > ece-install.out &
#+END_SRC

Alternatively, you may do:
#+BEGIN_SRC text
# nohup bash ece-install > ece-install.out &
#+END_SRC
The "nohup" at the beginning and the ampersand at the end lets you log
out of the SSH/X session to your Linux/Unix box while the script keeps
running in the background.

** Installing from EARs instead of Binaries
It is possible to get ece-install to use a supplied EAR and
configuration archive instead of using the files provided with the
Escenic Content Engine & plugins.

The EAR to provide is the one you generate with:
#+BEGIN_SRC text
$ ece -i <instance> assemble 
#+END_SRC
Normally, the EAR will then be available in:
#+BEGIN_SRC conf
/var/cache/escenic/engine.ear
#+END_SRC

The configuration bundle must contain:
#+BEGIN_SRC text
engine/security
engine/siteconfig/bootstrap-skeleton
engine/siteconfig/config-skeleton
assemblytool/plugins/<plugin>/siteconfig
#+END_SRC

and optionally also:
#+BEGIN_SRC text
engine/solr/conf
#+END_SRC

A simple way to create this bundle, is to use a server which has the
assembly environment set up and then do:

#+BEGIN_SRC text
$ cd /opt/escenic
$ tar czf /tmp/nursery-skeleton-solr-and-security.tar.gz \
  engine/security \
  engine/siteconfig/config-skeleton/ \
  engine/solr/conf \
  engine/siteconfig/bootstrap-skeleton/
#+END_SRC

/tmp/nursery-skeleton-solr-and-security.tar.gz should now have everything
you need. You can now configure your FAI installation to use these by,
e.g.:

#+BEGIN_SRC conf
fai_presentation_ear=/tmp/engine.ear
fai_presentation_conf_archive=/tmp/nursery-skeleton-solr-and-security.tar.gz
#+END_SRC

Corresponding configuration options are available for the other server
profiles, see the table below.

The inclusion of the engine/solr directory makes it easy for users to
provide their own, optimised Solr configuration. In this context, also
note that a post install hook, set_up_solr.postinst, is available.

If you wish to provide Nursery configuration for the plugins, you
simply put them in engine/siteconfig/config-skeleton inside your
tarball, together with the other Nursery configuration files.

The fai_presentation_conf_archive and fai_presentation_ear variables
both accept the following types of value (here using the value of
fai_presentation_ear as an example):
- ~http://build.server/stable/engine-mysite.com-1.2.3.ear~
- ~https://build.server/stable/engine-mysite.com-1.2.3.ear~
- ~file:///var/lib/build/stable/engine-mysite.com-1.2.3.ear~
- ~/var/lib/build/stable/engine-mysite.com-1.2.3.ear~

** Setting up virtual hosts
Setting up virtual host definitions in the application server makes a
some things easier, such as ECE plugins which set cookies based on
information they get from the app server.

ece-install can set up the virtual hosts configuration for Tomcat
application servers if the profile is editorial, all presentation.

To use this feature, you must define one domain for each publication
in the following FAI parameter:
#+BEGIN_SRC conf
fai_publication_domain_mapping_list="
  firepub#fire.escenic.com
  ildpub#ild.escenic.com#feuer.escenic.com,fuego.escenic.com
"
#+END_SRC

This will produce the following stanzas in server.xml:

#+BEGIN_SRC nxml
<Host name="fire.escenic.com" appBase="webapps" autoDeploy="false">
  <Context displayName="fire.escenic.com"
           docBase="firepub"
           path=""
  />
</Host>
<Host name="ild.escenic.com" appBase="webapps" autoDeploy="false">
  <Alias>feuer.escenic.com</Alias>
  <Alias>fuego.escenic.com</Alias>
  <Context displayName="ild.escenic.com"
           docBase="ildpub"
           path=""
  />
</Host>
#+END_SRC

As you can see, there's a third optional option to the
~fai_publication_domain_mapping_list~ which can be specified as a
comma separated list of host aliases to be added to the app server host
configuration. 

Furthermore, if these host names are  not resolvable to your local
host (neither localhost or the IP of your $HOSTNAME), ece-install will
add entries for these domains in the machine's /etc/hosts:
#+BEGIN_SRC conf
# added by ece-install @ Wed Feb  8 19:21:49 CST 2012
127.0.1.1 fire.escenic.com

# added by ece-install @ Wed Feb  8 19:21:51 CST 2012
127.0.1.1 ild.escenic.com
#+END_SRC

If you do not want ece-install to touch your /etc/hosts, you can set
fai_keep_off_etc_hosts=1 in your ece-install.conf

** Overview of All FAI Parameters
The ece-install script understands for the following settings in the
$HOME/ece-install.conf file of the root user:

|---------------------------------------+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------|
| Parameter                             | Default                                           | Description                                                                                                                           |
|---------------------------------------+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------|
| ~fai_all_conf_archive~                | ""                                                | conf.tar.gz to use for Nursery & JAAS configuration                                                                                   |
| ~fai_all_ear~                         | ""                                                | EAR to use instead of the Escenic binaries                                                                                            |
| ~fai_all_install~                     | 0                                                 | Install all components on your server.                                                                                                |
| ~fai_analysis_db_host~                | localhost                                         | For the EAE DB (different from ECE's)                                                                                                 |
| ~fai_analysis_db_install~             | 0                                                 | Install db profile                                                                                                                    |
| ~fai_analysis_db_password~            | read-the-source-luke                              | For the EAE DB (different from ECE's)                                                                                                 |
| ~fai_analysis_db_port~                | 3306                                              | For the EAE DB (different from ECE's)                                                                                                 |
| ~fai_analysis_db_schema~              | ece5db                                            | For the EAE DB (different from ECE's)                                                                                                 |
| ~fai_analysis_db_user~                | ece5user                                          | For the EAE DB (different from ECE's)                                                                                                 |
| ~fai_analysis_install~                | 0                                                 | Will install the Escenic Analysis Engine, aka Stats, EAE.                                                                             |
| ~fai_analysis_name~                   | analysis1                                         | EAE instance name                                                                                                                     |
| ~fai_analysis_port~                   | 8080                                              | Port of the EAE                                                                                                                       |
| ~fai_analysis_shutdown~               | 8005                                              | Shutdown port for the EAE app server                                                                                                  |
| ~fai_apt_vizrt_pool~                  | stable                                            | Which package pool in the Vizrt APT to install package from.                                                                          |
| ~fai_cache_backends~                  | ${HOSTNAME}:8080                                  | Space separated, e.g. "app1:8080 app2:8080"                                                                                           |
| ~fai_cache_install~                   | 0                                                 | Install cache server profile                                                                                                          |
| ~fai_db_drop_old_db_first~            | 0                                                 | Warning: this will drop the old database before installing a new one                                                                  |
| ~fai_db_daily_backup~                 | 0                                                 | Sets up daily backup of the DB.                                                                                                       |
| ~fai_db_host~                         | $HOSTNAME                                         | Useful for editor & presentation profiles                                                                                             |
| ~fai_db_install~                      | 0                                                 | Install db profile                                                                                                                    |
| ~fai_db_password~                     | read-the-source-luke                              | Useful for DB installation profile                                                                                                    |
| ~fai_db_port~                         | 3306                                              | Useful for editor & presentation profiles                                                                                             |
| ~fai_db_schema~                       | ece5db                                            | Useful for DB installation profile                                                                                                    |
| ~fai_db_user~                         | ece5user                                          | Useful for DB installation profile                                                                                                    |
| ~fai_editor_conf_archive~             | ""                                                | conf.tar.gz to use for Nursery & JAAS configuration                                                                                   |
| ~fai_editor_ear~                      | ""                                                | EAR to use instead of the Escenic binaries                                                                                            |
| ~fai_editor_install~                  | 0                                                 | Install the editorial profile                                                                                                         |
| ~fai_editor_name~                     | editor1                                           | Name of the editor instance                                                                                                           |
| ~fai_editor_port~                     | 8080                                              | HTTP port of the editor instance                                                                                                      |
| ~fai_editor_shutdown~                 | 8005                                              | Shutdown port of the editor instance                                                                                                  |
| ~fai_enabled~                         | 0                                                 | Whether or not to run ece-install in FAI mode                                                                                         |
| ~fai_keep_off_etc_hosts~              | 0                                                 | Set this to 1 if you don't want ece-install adding entries to /etc/hosts                                                              |
| ~fai_monitoring_admin_password~       | No telling you here ;-)                           | The admin password of the web interface(s). Currenlty only set for Icinga.                                                            |
| ~fai_monitoring_ece_host_list~        | ""                                                | Hosts running one or more ECE instance                                                                                                |
| ~fai_monitoring_host_list~            | ""                                                | Quoted, space separated list of <host>#<ip> pairs, e.g.: "pres1#10.72.227.250 pres2#10.72.227.251"                                    |
| ~fai_monitoring_install~              | 0                                                 | Install the monitoring server profile.                                                                                                |
| ~fai_monitoring_munin_node_list~      | ""                                                | Set this to a whitespace separated list of nodes that munin should monitor                                                            |
| ~fai_monitoring_search_host_list~     | ""                                                | Hosts running search instance(s) (Solr + indexer)                                                                                     |
| ~fai_monitoring_server_ip~            | 127.0.0.1                                         | The IP of the monitoring server.                                                                                                      |
| ~fai_nfs_allowed_client_network~      | ""                                                | IP/netmwask of allowed NFS clients, example: 192.168.1.0/255.255.255.0                                                                |
| ~fai_nfs_client_install~              | 0                                                 | Installs an NFS client                                                                                                                |
| ~fai_nfs_client_mount_point_parent~   | /mnt                                              | Mount point parent directory                                                                                                          |
| ~fai_nfs_export_list~                 | ""                                                | Space separated list of NFS export directories, full paths as seen on the NFS server. E.g.: /var/exports/multimedia                   |
| ~fai_nfs_server_address~              | ""                                                | Address of the NFS server, useful for the NFS client profile                                                                          |
| ~fai_nfs_server_install~              | 0                                                 | Install an NFS server                                                                                                                 |
| ~fai_presentation_conf_archive~       | ""                                                | conf.tar.gz to use for Nursery & JAAS configuration                                                                                   |
| ~fai_presentation_ear~                | ""                                                | EAR to use instead of the Escenic binaries                                                                                            |
| ~fai_presentation_install~            | 0                                                 | Install the presentation server profile                                                                                               |
| ~fai_presentation_name~               | web1                                              | Name of the presentation server instance                                                                                              |
| ~fai_presentation_port~               | 8080                                              | HTTP port of the presentation server instance                                                                                         |
| ~fai_presentation_shutdown~           | 8005                                              | Shutdown port of the presentation instance                                                                                            |
| ~fai_public_host_name~                | ${HOSTNAME}:8080                                  | The public address for your website                                                                                                   |
| ~fai_publication_create~              | 0                                                 | Create a new publication                                                                                                              |
| ~fai_publication_domain_mapping_list~ | ""                                                | Mapping between publication names and their corresponding domains on the form: "one#one.com other#other.com[#<alias1>[,<alias2>]]"    |
| ~fai_publication_name~                | mypub                                             | Name of the publication                                                                                                               |
| ~fai_publication_use_instance~        | dev1                                              | Name of local instance to use for creation                                                                                            |
| ~fai_publication_war~                 | "WF or ECE demo WAR"                              | WAR to base the new publication on                                                                                                    |
| ~fai_publication_war_uri_list~        | ""                                                | Publication WARs used for setting up Assembly tool. Supported: http[s]://tmp.com/mypub.war, file:///tmp/mypub.war and /tmp/mypub.war. |
| ~fai_rmi_install~                     | 0                                                 | Install RMI hub profile                                                                                                               |
| ~fai_search_conf_archive~             | ""                                                | conf.tar.gz to use for Nursery & JAAS configuration                                                                                   |
| ~fai_search_ear~                      | ""                                                | EAR to use instead of the Escenic binaries                                                                                            |
| ~fai_search_for_editor~               | 0                                                 | If 1 (true), will configure Solr for use with an editorial server, if not conf for presentation servers will be chosen.               |
| ~fai_search_indexer_ws_uri~           | http://${HOSTNAME}:8080/indexer-webservice/index/ | URI of the indexer-webservice that the search instance shall use for knowing what to index.                                           |
| ~fai_search_install~                  | 0                                                 | Install the search server profile (Solr + indexer)                                                                                    |
| ~fai_search_name~                     | search1                                           | Name of the search instance                                                                                                           |
| ~fai_search_port~                     | 8080                                              | HTTP port of the search instance                                                                                                      |
| ~fai_search_shutdown~                 | 8005                                              | Shutdown port of the search instance                                                                                                  |
| ~fai_vip_address~                     | ""                                                | The virtual IP the provider will claim                                                                                                |
| ~fai_vip_install~                     | 0                                                 | Install a VIP provider                                                                                                                |
| ~fai_vip_primary_node_auth_key~       | ""                                                | Optional, but useful to set to make conf files consistent. Will be generated if not set                                               |
| ~fai_vip_primary_node_ip~             | ""                                                | Primary node IP                                                                                                                       |
| ~fai_vip_primary_node_name~           | ""                                                | Primary node name, must be what $(uname -n) returns                                                                                   |
| ~fai_vip_secondary_node_ip~           | ""                                                | Secondary node IP                                                                                                                     |
| ~fai_vip_secondary_node_name~         | ""                                                | Secondary node name, must be what $(uname -n) returns                                                                                 |
| ~fai_vip_service_list~                | ""                                                | List of init.d scripts to invoke when the VIP is acclaimed/revoked, script must support start & stop                                  |
| ~fai_vip_sibling_ip~                  | ""                                                | The IP of the other node offering the VIP                                                                                             |
| ~fai_wf_install~                      | 0                                                 | Install Widget Framework profile                                                                                                      |
|---------------------------------------+---------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------|

As you've probably have guessed, 0 means "false" and 1 means "true" :-)

** Examples
*** Installing an Editorial Server & Create a Publication
To automatically install an editorial server and create a publication
called "jollygood", the minimal configuration in ece-install.conf
would be:

#+BEGIN_SRC conf
fai_enabled=1
fai_editor_install=1
fai_publication_create=1
fai_publication_name=jollygood
#+END_SRC

*** Installing Two Presentation Servers On a Single Host
If you wish to only install two presentation servers called "web1" and
"web2" on your host, you will first run ece-install with:
#+BEGIN_SRC conf
fai_enabled=1
fai_presentation_install=1
fai_presentation_name=web1
#+END_SRC 

And then re-issue ece-install with the following configuration:
#+BEGIN_SRC conf
fai_enabled=1
fai_presentation_install=1
fai_presentation_name=web2
fai_presentation_port=8081
fai_presentation_shutdown=8105
#+END_SRC
Notice that this configuration has some extra options since the
previous run of ece-install could run with the default settings,
whereas the second one needs to override these.


** Verifying That the Script Is Running In FAI Mode
When FAI is enabled, ece-install will report:
#+BEGIN_SRC text
[ece-install] Full Automatic Install (FAI) enabled.
[ece-install] All user input will be read from /root/ece-install.conf
#+END_SRC

* Running More Than One Installation Process
If the script believes there's already an ece-intall process running,
it will abort:
#+BEGIN_SRC text
[ece-install] There's already one ece-install process running. If you believe
[ece-install] this is wrong, e.g. if a previous run of ece-install was aborted
[ece-install] before it completed, you may delete /var/run/ece-install.pid and
[ece-install] run ece-install again.
#+END_SRC

* Re-running ece-install (and How To Speed It Up)
Although the initial thought behind ece-install, is to run it on a
clean system to get up and running as soon as possible. However, you
may want to re-run ece-install on the same host, for instance to add
another instance of ECE, set up Widget Framework or create another
publication.

ece-install has a number of features which will try to minimise the
time it takes to run it on consecutive runs. If running on Debian
based systems, it will check if you already have installed
pre-requisite 3rd party libraries and only if any are missing will it
ask the package manager to fetch it.

Likewise, ece-install will see if the Escenic artifacts or application
server that you need are already present in the /tmp/ece-downloads
folder, and only download the missing ones (if any).

To get a list of the artifacts it'll pull from
http://technet.escenic.com and http://tomcat.apache.org search for the
following variables:
- ~technet_download_list~
- ~wf_download_list~
- ~tomcat_download~

Two other ways of speeding up the installation is (of course) to use
the backup/restore feature or install from a EAR and configuration
bundle, see the FAI section.

* Using a Custom Configuration File for ece-install
You can specify a different configuration by using the -f parameter: 
#+BEGIN_SRC text
$ ece-install -f ece-install-presentation-server.conf
#+END_SRC

* Overview of File Paths Used by the ece-install script
There are of course other paths involved when setting up your system,
but these should be the most interesting ones.

|-----------------------------------------------+------------------------------------------------------------------|
| Path                                          | Explanation                                                      |
|-----------------------------------------------+------------------------------------------------------------------|
| ~/etc/apt/sources.list.d/escenic.list~        | 3rd party APT repositories added by ece-install *)               |
| ~/etc/default/ece~                            | The configuration file for the ece init.d script                 |
| ~/etc/escenic/ece-<instance>.conf~            | Instance specific settings for ~/usr/bin/ece~                    |
| ~/etc/escenic/ece.conf~                       | Common ece.conf file for ~/usr/bin/ece~                          |
| ~/etc/escenic/engine/common~                  | Common Nursery configuration layer                               |
| ~/etc/escenic/engine/common/security~         | Common security configuration for all ECE instances.             |
| ~/etc/escenic/engine/common/trace.properties~ | Log4j configuration, produces instance specific log files.       |
| ~/etc/escenic/engine/instance/<instance>~     | Instance specific Nursery configuration                          |
| ~/etc/escenic/solr~                           | ECE specific Solr configuration                                  |
| ~/etc/init.d/mysql[d]~                        | For starting and stopping MySQL/Percona                          |
| ~/etc/init.d/varnish~                         | For starting and stopping Varnish                                |
| ~/etc/intit.d/ece~                            | The init.d script managing _all_ the ECE instances on your host. |
| ~/etc/varnish/default.vcl~                    | The Varnish configuration                                        |
| ~/opt/escenic~                                | All ECE components can be found here                             |
| ~/opt/escenic/assemblytool~                   | The assembly tool                                                |
| ~/opt/escenic/assemblytool/plugins~           | Contains symlinks to all plugins in ~/opt/escenic~               |
| ~/opt/escenic/engine~                         | Symlink pointing to the current ECE                              |
| ~/opt/tomcat~                                 | Symlink pointing to the install Apache Tomcat (~catalina_home~)  |
| ~/opt/tomcat-<instance>~                      | Instance specific Tomcat files (~catalina_base~)                 |
| ~/usr/bin/ece~                                | Script for operating all ECE instances + RMI hub and EAE         |
| ~/usr/sbin/ece-install~                       | The installation script described in this guide                  |
| ~/var/log/escenic/<type>-<instance>.log~      | The instance's log4j log                                         |
| ~/var/log/escenic/<type>-<instance>.out~      | The instance system out log                                      |
| ~/var/log/escenic/solr.<date>.log~            | The Solr log (not in standard out!)                              |
| ~/var/run/escenic/<type>-<instance>.pid~      | The instance's  PID file                                         |
|-----------------------------------------------+------------------------------------------------------------------|

*) Applies only to Debian based systems.

* Overriding the Escenic directories
All of the Escenic specific directories may be overwritten in
ece-install.conf. Here's an example of changing all the paths possible
with the same suffix.

#+BEGIN_SRC conf
dir_suffix=escenic-parallel
escenic_root_dir=/opt/${dir_suffix}
escenic_conf_dir=/etc/${dir_suffix}
escenic_log_dir=/var/log/${dir_suffix}
escenic_data_dir=/var/lib/${dir_suffix}
escenic_run_dir=/var/run/${dir_suffix}
escenic_backups_dir=/var/backups/${dir_suffix}
escenic_spool_dir=/var/spool/${dir_suffix}
escenic_cache_dir=/var/cache/${dir_suffix}
escenic_crash_dir=/var/crash/${dir_suffix}
appserver_parent_dir=/opt
#+END_SRC

Note, this is only needed if you are running two completely separate
environments on the same host. A use case is if you're setting up a
test environment and want to separate stacks of Escenic Content Engine
and plugins.

* Extending ece-install by Writing Hooks
ece-install  has a number of hooks on which you can hook on your own
scripts. The scripts are to reside in $HOME/ece-conf.d/ and have names
inspired by Debian's package scripts:

#+BEGIN_SRC text
<hook name>.<phase>
#+END_SRC

e.g.:

#+BEGIN_SRC text
install_analysis_server.preinst
#+END_SRC

Will be run before the body of the hook, just the corresponding
.postinst hook will be run after.

** Accessing ece-install variables
Before running the hook, ece-install will make all its local variables
available in /var/run/escenic/ece-install.env, which can then be used
by the hook scripts.

** Example hook
Here is an example hook which will be run after the EAE is installed.

#+BEGIN_SRC sh
# Put this in is $HOME/ece-install.d/install_analysis_server.postinst

# read ece-install's current variables
source /var/run/escenic/ece-install.env

# do something useful
echo "Hello from $0, EAE is installed in ${tomcat_base}" > /tmp/hello.txt
#+END_SRC

** Available hooks
Currently, the following hooks are available:

#+BEGIN_SRC text
install_analysis_server.preinst
install_analysis_server.postinst
set_up_solr.preinst
set_up_solr.postinst
#+END_SRC

* Assumptions
** The machine on which ece-install has enough RAM
It is assumed that the machine on which ece-install has enough RAM to
install the profiles the user asks for.

A common error by users, is to run ece-install in a (virtual) machine
that has e.g. only 1GB RAM. For happy running, we recommend having a
machine with at least 3GB when installing a full ECE stack on it.

* Uninstalling Everything that the ece-install Set Up
WARNING: this is potentially dangerous as some of these components may
be used by other pieces of software you have running on your
host. However, this may be useful if you're installing a clean
environment and want to e.g. undo your previous install to install a
different profile.

You trigger this by setting the following in your ece-install.conf
#+BEGIN_SRC conf
fai_un_install_everything=1
#+END_SRC

    
ece-install will then prompt the user to type a confirmation
sentence. Once the un-installation is done, a summary is printed to
the user.

ece-install will then continue with the other tasks and installation
profiles if so defined. The fai_un_install_everything=1 is processed
before any other FAI profile, hence, on a system where you want to
wipe the slate clean before starting over, you can for instance do:

#+BEGIN_SRC conf
fai_un_install_everything=1
fai_presentation_install=1
#+END_SRC

The output will be similar to:
#+BEGIN_SRC text
[ece-install-5] You have set fai_un_install_everything=1 in your /root/ece-install.conf
[ece-install-5] This will uninstall the following on raven:
[ece-install-5] Packages to be removed: ant ant-contrib ant-optional escenic-content-engine-scripts escenic-munin-plugins escenic-munin-plugins libmysql-java maven2 memcached munin munin-node munin-plugins-extra munin-java-extra nginx percona-server-client percona-server-client-5.5 percona-server-common-5.5 percona-server-server percona-server-server-5.5 varnish sun-java6-jdk
[ece-install-5] Files & directories to be removed: /etc/escenic /opt/*tomcat* /opt/escenic /var/lib/escenic /var/run/escenic /etc/escenic /var/log/escenic /etc/apt/sources.list.d/escenic.list
[ece-install-5] APT keys to be removed: C4DEFFEB CD2EFD2A
[ece-install-5] If you're absolutely sure about this, type:
[ece-install-5] I know what I'm doing, please do as I say.
I know what I'm doing, please do as I say.
[ece-install-11] OK, I'll do as you wish:
[ece-install-11] I will uninstall everything set up by ece-install
[ece-install-11] Everything (well, most) set up by ece-install should now
[ece-install-11] have been removed from raven.
#+END_SRC

